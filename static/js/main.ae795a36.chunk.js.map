{"version":3,"sources":["helpers/chanceWins.js","helpers/check.js","components/Bannerwin.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["changeWins","check","node","win","forEach","chances","isWin","change","innerHTML","card","equal","push","every","eq","Bannerwin","winner","endGame","className","onClick","window","location","reload","Dashboard","useState","turn","setTurn","undefined","setCard","finished","setFinished","useEffect","document","querySelectorAll","console","log","e","target","querySelector","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"4KAUeA,EAVI,CAClB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IC8BOC,EApCD,SAACC,GAGd,IAAIC,GAAM,EAYP,GAXHH,EAAWI,SAAQ,SAACC,GACnB,IAAIC,EAAQ,GACZD,EAAQD,SAAQ,SAACG,GAChBD,GAASJ,EAAKK,GAAQC,aAET,QAAVF,GAA6B,QAAVA,IACtBH,GAAM,MAKFA,EAIC,OAHAD,EAAKE,SAAQ,SAAAK,GACTA,EAAKD,UAAaC,EAAKD,WAAa,OAEjCL,EAEP,IAAMO,EAAQ,GAQhB,OAPER,EAAKE,SAAQ,SAAAK,GAAI,OAAEC,EAAMC,OAAOF,EAAKD,cAErBE,EAAME,OAAM,SAAAC,GAAE,OAAQ,IAANA,OAG9BV,EAAM,SAEHA,G,OC7BAW,EAAY,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,OAAOC,EAAa,EAAbA,QAQ9B,OACI,mCACKA,EAAU,sBAAKC,UAAU,kBAAf,cAAkC,sBAAKA,UAAU,SAAf,6BACnCF,EACF,wBAAQG,QARH,WACjBC,OAAOC,SAASC,UAOJ,2BAFG,OAGA,MCXVC,EAAY,WAAO,IAAD,EACNC,mBAAS,KADH,mBACvBC,EADuB,KACjBC,EADiB,OAENF,wBAASG,GAFH,mBAEvBjB,EAFuB,KAEjBkB,EAFiB,OAGEJ,oBAAS,GAHX,mBAGvBK,EAHuB,KAGbC,EAHa,KA2B9B,OAbAC,qBAAU,WACLrB,IAASA,EAAKD,YAAWC,EAAKD,UAAYgB,GAC9C,IAAMrB,EAAMF,EAAM8B,SAASC,iBAAiB,UACxC7B,IACS,UAARA,EACSsB,EAAQ,UAEpBQ,QAAQC,IAAR,eAAoBV,IAErBK,GAAY,MAEX,CAACpB,EAAMe,IAGT,qCACC,cAAC,EAAD,CAAWT,OAAQS,EAAMR,QAASY,IAClC,0BAASV,QAzBS,SAACiB,GACHA,EAAEC,OAAOC,cAAc,OAGvCV,EAAQQ,EAAEC,OAAOC,cAAc,MAC/BZ,EAAiB,MAATD,EAAe,IAAM,OAoBEP,UAAU,YAAzC,UACC,qBAAKA,UAAU,OAAf,SACC,mBAAGA,UAAU,WAEd,qBAAKA,UAAU,OAAf,SACC,mBAAGA,UAAU,WAEd,qBAAKA,UAAU,OAAf,SACC,mBAAGA,UAAU,WAEd,qBAAKA,UAAU,OAAf,SACC,mBAAGA,UAAU,WAEd,qBAAKA,UAAU,OAAf,SACC,mBAAGA,UAAU,WAEd,qBAAKA,UAAU,OAAf,SACC,mBAAGA,UAAU,WAEd,qBAAKA,UAAU,OAAf,SACC,mBAAGA,UAAU,WAEd,qBAAKA,UAAU,OAAf,SACC,mBAAGA,UAAU,WAEd,qBAAKA,UAAU,OAAf,SACC,mBAAGA,UAAU,kBC7CHqB,MAVf,WACE,OACE,qBAAKrB,UAAU,MAAf,SAEE,cAAC,EAAD,OCGSsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,mCACE,cAAC,EAAD,MAEFlB,SAASmB,eAAe,SAM1BX,K","file":"static/js/main.ae795a36.chunk.js","sourcesContent":["const changeWins = [\r\n\t[0, 1, 2],\r\n\t[3, 4, 5],\r\n\t[6, 7, 8],\r\n\t[0, 3, 6],\r\n\t[1, 4, 7],\r\n\t[2, 5, 8],\r\n\t[0, 4, 8],\r\n\t[2, 4, 6],\r\n]\r\nexport default changeWins\r\n","import changeWins from './chanceWins'\r\n\r\nconst check = (node) => {\r\n\t// node.forEach(card => console.log(card.innerHTML))\r\n\r\n\tlet win = false\r\n\tchangeWins.forEach((chances) => {\r\n\t\tlet isWin = ''\r\n\t\tchances.forEach((change) => {\r\n\t\t\tisWin += node[change].innerHTML\r\n\t\t})\r\n\t\tif (isWin === 'XXX' || isWin === 'OOO') {\r\n\t\t\twin = true\r\n\t\t}\r\n        // console.log(isWin)\r\n\t})\r\n\r\n    if(win){\r\n        node.forEach(card=>{\r\n            card.innerHTML =  card.innerHTML || '-'\r\n        })\r\n        return win\r\n    }else{\r\n        const equal = []\r\n        node.forEach(card=>equal.push(!!card.innerHTML))\r\n        // console.log(equal)\r\n      const isequal =   equal.every(eq=>eq ===true)\r\n      if(isequal){\r\n\r\n          win = 'equal'\r\n      }\r\n      return win\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\nexport default check\r\n","import React from 'react'\r\n\r\nexport const Bannerwin = ({winner,endGame}) => {\r\n\r\n    // console.log({winner, endGame})\r\n\r\n    const handlerReset = ()=>{\r\n        window.location.reload()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {endGame ? <div className=\"winnerContainer\"> <div className=\"winner\">\r\n\t\t\t\t\tThe winner is : {winner}\r\n                    <button onClick={handlerReset}>Play again</button>\r\n\t\t\t\t</div> </div>     :''\r\n                \r\n                 }\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport check from '../helpers/check'\r\nimport { Bannerwin } from './Bannerwin'\r\n\r\nexport const Dashboard = () => {\r\n\tconst [turn, setTurn] = useState('O')\r\n\tconst [card, setCard] = useState(undefined)\r\n\tconst [finished, setFinished] = useState(false)\r\n\r\n\tconst handlerTurn = (e) => {\r\n\t\tconst isWritte = e.target.querySelector('p')\r\n\r\n\t\tif (isWritte) {\r\n\t\t\tsetCard(e.target.querySelector('p'))\r\n\t\t\tsetTurn(turn === 'X' ? 'O' : 'X')\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (card && !card.innerHTML) card.innerHTML = turn\r\n\t\tconst win = check(document.querySelectorAll('.draw'))\r\n\t\tif (win) {\r\n\t\t\tif (win === 'equal') {\r\n                setTurn('Nobody')\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(`gano ${turn}`)\r\n\t\t\t}\r\n\t\t\tsetFinished(true)\r\n\t\t}\r\n\t}, [card, turn])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Bannerwin winner={turn} endGame={finished} />\r\n\t\t\t<section onClick={handlerTurn} className=\"dashboard\">\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t<p className=\"draw\"></p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t<p className=\"draw\"></p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t<p className=\"draw\"></p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t<p className=\"draw\"></p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t<p className=\"draw\"></p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t<p className=\"draw\"></p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t<p className=\"draw\"></p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t<p className=\"draw\"></p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t<p className=\"draw\"></p>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t</>\r\n\t)\r\n}\r\n"," \nimport './App.css';\n\nimport {Dashboard} from './components/Dashboard'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <Dashboard />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}